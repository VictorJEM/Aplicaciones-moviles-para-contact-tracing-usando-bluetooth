server.port=8085

spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/dpppt
spring.datasource.username=dpppt
spring.datasource.password=dpppt
spring.datasource.driver-class-name=org.postgresql.Driver
# spring.datasource.driverClassName=org.postgresql.ds.PGSimpleDataSource
# spring.datasource.failFast=true
# spring.datasource.maximumPoolSize=5
# spring.datasource.maxLifetime=1700000
# spring.datasource.idleTimeout=600000
# spring.datasource.connectionTimeout=30000

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application

#Crea las tablas aunque ya existan en la base de datos, y las elimina una vez que se apaga el servidor
#spring.jpa.hibernate.ddl-auto=create-drop

#Crea las tablas aunque ya existan en la base de datos (elimina los datos de esas tablas).
#spring.jpa.hibernate.ddl-auto=create

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect